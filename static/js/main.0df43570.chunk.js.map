{"version":3,"sources":["components/Section/Section.js","components/Profile/default.jpg","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["Section","title","children","Profile","props","avatar","defaultImage","name","tag","location","stats","className","src","alt","followers","views","likes","defaultProps","Statistics","map","stat","style","backgroundColor","item","Number","id","replace","label","percentage","FriendList","friends","friend","isOnline","width","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.0df43570.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n function Section({ title, children }) {\r\n    return <section>\r\n        {title && <h2>{title}</h2>} {children}\r\n    </section>\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children:PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes  from 'prop-types';\r\nimport defaultImage from './default.jpg'\r\n\r\n// ?? оператор в js src={avatar ?? defaultImage}\r\n function Profile(props) {\r\n  const {avatar = defaultImage, name, tag, location, stats } = props;\r\n\r\n    return (\r\n     \r\n        <div className=\"profile\">\r\n        <div className=\"description\">\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                className=\"avatar\"\r\n            />\r\n            <p className=\"name\">{name}</p>\r\n            <p className=\"tag\">@{tag}</p>\r\n            <p className=\"location\">{location}</p>\r\n        </div>\r\n      \r\n        <ul className=\"stats\">\r\n            <li>\r\n                <span className=\"label\">Followers</span>\r\n                <span className=\"quantity\">{stats.followers}</span>\r\n            </li>\r\n            <li>\r\n                <span className=\"label\">Views</span>\r\n                <span className=\"quantity\">{stats.views}</span>\r\n            </li>\r\n            <li>\r\n                <span className=\"label\">Likes</span>\r\n                <span className=\"quantity\">{stats.likes}</span>\r\n                </li>\r\n                \r\n        </ul>\r\n        \r\n            </div>);\r\n}\r\n\r\n//* isRequired - обязательный prop\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nProfile.defaultProps = {\r\n  name: 'User name',\r\n  tag: '@User tag',\r\n  location: 'User location',\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg',\r\n  stats: {\r\n    followers: '0',\r\n    views: '0',\r\n    likes: '0',\r\n  },\r\n};\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\n\r\nconst color = item => {\r\n  const colorArray = ['#E74C3C', '#8E44AD', '#3498DB', '#27AE60', '#F39C12'];\r\n  return `${colorArray[Number(item.id.replace(/[^0-9]/g, '')) % 5]}`;\r\n};\r\n\r\nconst Statistics =({stats}) =>  (\r\n         <ul className=\"stat-list\">\r\n        {stats.map(stat =>\r\n           (<li className=\"item\"  key={stat.id} style={{ backgroundColor: color(stat) }}>\r\n            <span className=\"label\">{ stat.label}</span>\r\n            <span className=\"percentage\">{ stat.percentage}%</span>\r\n    </li>))}\r\n  </ul>);\r\n    \r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\n\r\nconst FriendList =({friends}) =>  (\r\n        <ul className=\"friend-list\">\r\n            {friends.map(friend =>\r\n                (<li className=\"item\" key={friend.id}>\r\n                <span className={`status ${friend.isOnline ? \"styles.statusOnline\": \"styles.statusOffline\"}`} ></span>\r\n                <img className=\"avatar\" src={friend.avatar } alt={friend.name } width=\"48\" />\r\n                <p className=\"name\">{friend.name }</p>\r\n            </li>))}\r\n        </ul>);\r\n    \r\n\r\nFriendList.propTypes = {\r\n   friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nFriendList.defaultProps = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg',\r\n  name: 'User name',\r\n  isOnline: false,\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\n\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return (\r\n        <table className=\"transaction-history\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(item => (\r\n                    <tr key={item.id}>\r\n                        <td>{item.type}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.currency}</td>\r\n                    </tr>\r\n                ))}\r\n\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nTransactionHistory.defaultProps = {\r\n    type: 'Type',\r\n    currency: 'Currency',\r\n};\r\n\r\nexport default TransactionHistory;","//app.jsx\r\nimport Section from \"./components/Section/Section\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\n\r\nimport user from \"./components/Profile/user.json\";\r\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\r\nimport friends from \"./components/FriendList/friends.json\";\r\nimport transactions from \"./components/TransactionHistory/transactions.json\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            <Section title=\"Задание 1\">\r\n                <Profile {...user} />\r\n            </Section>\r\n            <Section className=\"statistics\" title=\"Upload stats\">\r\n                <Statistics stats={statisticalData} />\r\n            </Section>\r\n            <Section >\r\n                <FriendList friends={friends} />\r\n            </Section>\r\n            <Section title=\"Задание 4\">\r\n                <TransactionHistory items={transactions} />\r\n            </Section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n\n// &&\n// ? :"],"sourceRoot":""}